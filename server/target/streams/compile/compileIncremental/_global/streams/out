[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 106 products, 27 sources, 13 libraries[0m
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/server/target/scala-2.13/twirl/main/views/html/reactMain.template.scala, ${BASE}/server/app/actors/MessageActor.scala, ${BASE}/server/target/scala-2.13/twirl/main/views/html/loginAjax.template.scala, ${BASE}/server/target/scala-2.13/twirl/main/views/html/main.template.scala, ${BASE}/server/target/scala-2.13/twirl/main/views/html/successWebSock.template.scala, ${BASE}/server/app/controllers/Messageboarddb.scala, ${BASE}/server/target/scala-2.13/twirl/main/views/html/login.template.scala, ${BASE}/server/app/actors/MessageManager.scala, ${BASE}/server/target/scala-2.13/routes/main/controllers/routes.java, ${BASE}/server/app/controllers/WebSocket.scala, ${BASE}/server/app/models/DatabaseModel.scala, ${BASE}/server/app/models/UserData.scala, ${BASE}/server/target/scala-2.13/routes/main/controllers/ReverseRoutes.scala, ${BASE}/server/app/models/CodeGen.scala, ${BASE}/server/app/actors/CanvasManager.scala, ${BASE}/server/app/models/ApplicationInMemoryModel.scala, ${BASE}/server/app/actors/CanvasActor.scala, ${BASE}/server/target/scala-2.13/twirl/main/views/html/index.template.scala, ${BASE}/server/target/scala-2.13/routes/main/router/RoutesPrefix.scala, ${BASE}/server/app/controllers/Messageboard.scala, ${BASE}/server/target/scala-2.13/twirl/main/views/html/messagedb.template.scala, ${BASE}/server/app/controllers/Application.scala, ${BASE}/server/target/scala-2.13/twirl/main/views/html/canvaspage.template.scala, ${BASE}/server/target/scala-2.13/routes/main/router/Routes.scala, ${BASE}/server/target/scala-2.13/twirl/main/views/html/success.template.scala, ${BASE}/server/target/scala-2.13/routes/main/controllers/javascript/JavaScriptReverseRoutes.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(), removed = Set(${BASE}/server/app/models/Tables.scala), changed = Set(${BASE}/server/app/models/DatabaseModel.scala), unmodified = ...),Set(),Set(),API Changes: Set())[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set(${BASE}/server/app/models/Tables.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(${BASE}/server/app/models/DatabaseModel.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(models.Tables.MessagesRow, models.Tables.UsersRow, models.Tables.Users, models.Tables, models.DatabaseModel, models.Tables.Messages)[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(models.Tables.MessagesRow, models.Tables.UsersRow, models.Tables.Users, models.Tables, models.DatabaseModel, models.Tables.Messages)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(${BASE}/server/app/models/DatabaseModel.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: models.Tables.MessagesRow, models.Tables.UsersRow, models.Tables.Users, models.Tables, models.DatabaseModel, models.Tables.Messages[0m
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 1 Scala source to /users/bmalik/github/webapps/webapps-s21-play-messageboard/server/target/scala-2.13/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.4.3:compile for Scala 2.13.4[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 6fa7c345 for Scala compiler version 2.13.4[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-deprecation[0m
[0m[[0m[0mdebug[0m] [0m[0m	-unchecked[0m
[0m[[0m[0mdebug[0m] [0m[0m	-encoding[0m
[0m[[0m[0mdebug[0m] [0m[0m	utf8[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.4/scala-library-2.13.4.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/users/bmalik/github/webapps/webapps-s21-play-messageboard/server/target/scala-2.13/classes:/users/bmalik/github/webapps/webapps-s21-play-messageboard/shared/.jvm/target/scala-2.13/classes:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/play/twirl-api_2.13/1.5.0/twirl-api_2.13-1.5.0.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/play/play-server_2.13/2.8.7/play-server_2.13-2.8.7.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/play/play-logback_2.13/2.8.7/play-logback_2.13-2.8.7.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/play/play-akka-http-server_2.13/2.8.7/play-akka-http-server_2.13-2.8.7.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/play/filters-helpers_2.13/2.8.7/filters-helpers_2.13-2.8.7.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/play/play-json_2.13/2.9.1/play-json_2.13-2.9.1.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/vmunier/scalajs-scripts_2.13/1.1.4/scalajs-scripts_2.13-1.1.4.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/play/play-guice_2.13/2.8.7/play-guice_2.13-2.8.7.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/play/play-slick_2.13/5.0.0/play-slick_2.13-5.0.0.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/slick/slick-codegen_2.13/3.3.3/slick-codegen_2.13-3.3.3.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/org/postgresql/postgresql/42.2.18/postgresql-42.2.18.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/slick/slick-hikaricp_2.13/3.3.3/slick-hikaricp_2.13-3.3.3.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/org/mindrot/jbcrypt/0.4/jbcrypt-0.4.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-xml_2.13/1.2.0/scala-xml_2.13-1.2.0.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/play/play_2.13/2.8.7/play_2.13-2.8.7.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/play/play-streams_2.13/2.8.7/play-streams_2.13-2.8.7.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-http-core_2.13/10.1.13/akka-http-core_2.13-10.1.13.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/play/play-functional_2.13/2.9.1/play-functional_2.13-2.9.1.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-reflect/2.13.4/scala-reflect-2.13.4.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-core/2.10.5/jackson-core-2.10.5.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.10.5/jackson-annotations-2.10.5.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.10.5/jackson-datatype-jdk8-2.10.5.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.10.5/jackson-datatype-jsr310-2.10.5.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.10.5.1/jackson-databind-2.10.5.1.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/inject/guice/4.2.3/guice-4.2.3.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/inject/extensions/guice-assistedinject/4.2.3/guice-assistedinject-4.2.3.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/slick/slick_2.13/3.3.3/slick_2.13-3.3.3.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/play/play-jdbc-api_2.13/2.8.0/play-jdbc-api_2.13-2.8.0.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/zaxxer/HikariCP/3.2.0/HikariCP-3.2.0.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/play/build-link/2.8.7/build-link-2.8.7.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/org/slf4j/jul-to-slf4j/1.7.30/jul-to-slf4j-1.7.30.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/org/slf4j/jcl-over-slf4j/1.7.30/jcl-over-slf4j-1.7.30.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-actor_2.13/2.6.10/akka-actor_2.13-2.6.10.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-actor-typed_2.13/2.6.10/akka-actor-typed_2.13-2.6.10.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-slf4j_2.13/2.6.10/akka-slf4j_2.13-2.6.10.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-serialization-jackson_2.13/2.6.10/akka-serialization-jackson_2.13-2.6.10.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/guava/guava/28.2-jre/guava-28.2-jre.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/io/jsonwebtoken/jjwt/0.9.1/jjwt-0.9.1.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/jakarta/transaction/jakarta.transaction-api/1.3.3/jakarta.transaction-api-1.3.3.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/javax/inject/javax.inject/1/javax.inject-1.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-java8-compat_2.13/0.9.1/scala-java8-compat_2.13-0.9.1.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/ssl-config-core_2.13/0.4.2/ssl-config-core_2.13-0.4.2.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-parser-combinators_2.13/1.1.2/scala-parser-combinators_2.13-1.1.2.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/org/reactivestreams/reactive-streams/1.0.3/reactive-streams-1.0.3.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-stream_2.13/2.6.10/akka-stream_2.13-2.6.10.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-parsing_2.13/10.1.13/akka-parsing_2.13-10.1.13.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/config/1.4.0/config-1.4.0.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-collection-compat_2.13/2.0.0/scala-collection-compat_2.13-2.0.0.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/play/play-exceptions/2.8.7/play-exceptions-2.8.7.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-module-scala_2.13/2.10.5/jackson-module-scala_2.13-2.10.5.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-module-parameter-names/2.10.5/jackson-module-parameter-names-2.10.5.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/dataformat/jackson-dataformat-cbor/2.10.5/jackson-dataformat-cbor-2.10.5.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/org/lz4/lz4-java/1.7.1/lz4-java-1.7.1.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/errorprone/error_prone_annotations/2.3.4/error_prone_annotations-2.3.4.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/google/j2objc/j2objc-annotations/1.3/j2objc-annotations-1.3.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/akka/akka-protobuf-v3_2.13/2.6.10/akka-protobuf-v3_2.13-2.6.10.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/module/jackson-module-paranamer/2.10.5/jackson-module-paranamer-2.10.5.jar:/users/bmalik/.cache/coursier/v1/https/repo1.maven.org/maven2/com/thoughtworks/paranamer/paranamer/2.8/paranamer-2.8.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.Tables.MessagesRow...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: models.Tables.MessagesRow[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.Tables.MessagesRow)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.Tables.MessagesRow,ModifiedNames(changes = UsedName(copy$default$5,[Default]), UsedName(productElementNames,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(copy$default$3,[Default]), UsedName(eq,[Default]), UsedName(timestamp,[Default]), UsedName(productElementName,[Default]), UsedName(canEqual,[Default]), UsedName(notify,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(wait,[Default]), UsedName(toString,[Default]), UsedName(productElement,[Default]), UsedName(fromuser,[Default]), UsedName(unapply,[Default]), UsedName(apply,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName(touser,[Default]), UsedName(##,[Default]), UsedName(==,[Default]), UsedName(productArity,[Default]), UsedName(copy$default$1,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(MessagesRow,[Default]), UsedName(body,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(models;Tables;MessagesRow;init;,[Default]), UsedName(ne,[Default]), UsedName(copy$default$4,[Default]), UsedName(equals,[Default]), UsedName(synchronized,[Default]), UsedName(copy,[Default]), UsedName(messageId,[Default]), UsedName(copy$default$2,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]))) invalidates 1 classes due to The models.Tables.MessagesRow has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(copy$default$5,[Default]), UsedName(productElementNames,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(copy$default$3,[Default]), UsedName(eq,[Default]), UsedName(timestamp,[Default]), UsedName(productElementName,[Default]), UsedName(canEqual,[Default]), UsedName(notify,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(wait,[Default]), UsedName(toString,[Default]), UsedName(productElement,[Default]), UsedName(fromuser,[Default]), UsedName(unapply,[Default]), UsedName(apply,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName(touser,[Default]), UsedName(##,[Default]), UsedName(==,[Default]), UsedName(productArity,[Default]), UsedName(copy$default$1,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(MessagesRow,[Default]), UsedName(body,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(models;Tables;MessagesRow;init;,[Default]), UsedName(ne,[Default]), UsedName(copy$default$4,[Default]), UsedName(equals,[Default]), UsedName(synchronized,[Default]), UsedName(copy,[Default]), UsedName(messageId,[Default]), UsedName(copy$default$2,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(models.Tables.MessagesRow)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.Tables.Users...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: models.Tables.Users[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.Tables.Users)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.Tables.Users,ModifiedNames(changes = UsedName(create_*,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(column,[Default]), UsedName(TableElementType,[Default]), UsedName(password,[Default]), UsedName(index,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(notify,[Default]), UsedName(username,[Default]), UsedName(index$default$3,[Default]), UsedName(tableName,[Default]), UsedName(toNode,[Default]), UsedName(wait,[Default]), UsedName(indexes,[Default]), UsedName(toString,[Default]), UsedName(tableConstraints,[Default]), UsedName(Users,[Default]), UsedName(foreignKey$default$6,[Default]), UsedName(tableNode,[Default]), UsedName(primaryKey,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName(primaryKeys,[Default]), UsedName(models;Tables;Users;init;,[Default]), UsedName(tableProvider,[Default]), UsedName(*,[Default]), UsedName(##,[Default]), UsedName(==,[Default]), UsedName(?,[Default]), UsedName(finalize,[Default]), UsedName(tableIdentitySymbol,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(collectFieldSymbols,[Default]), UsedName(ne,[Default]), UsedName(tableTag,[Default]), UsedName(O,[Default]), UsedName(foreignKey$default$5,[Default]), UsedName(equals,[Default]), UsedName(synchronized,[Default]), UsedName(encodeRef,[Default]), UsedName(color,[Default]), UsedName(foreignKeys,[Default]), UsedName(asInstanceOf,[Default]), UsedName(foreignKey,[Default]), UsedName(getClass,[Default]), UsedName(schemaName,[Default]))) invalidates 1 classes due to The models.Tables.Users has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(create_*,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(column,[Default]), UsedName(TableElementType,[Default]), UsedName(password,[Default]), UsedName(index,[Default]), UsedName(eq,[Default]), UsedName(id,[Default]), UsedName(notify,[Default]), UsedName(username,[Default]), UsedName(index$default$3,[Default]), UsedName(tableName,[Default]), UsedName(toNode,[Default]), UsedName(wait,[Default]), UsedName(indexes,[Default]), UsedName(toString,[Default]), UsedName(tableConstraints,[Default]), UsedName(Users,[Default]), UsedName(foreignKey$default$6,[Default]), UsedName(tableNode,[Default]), UsedName(primaryKey,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName(primaryKeys,[Default]), UsedName(models;Tables;Users;init;,[Default]), UsedName(tableProvider,[Default]), UsedName(*,[Default]), UsedName(##,[Default]), UsedName(==,[Default]), UsedName(?,[Default]), UsedName(finalize,[Default]), UsedName(tableIdentitySymbol,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(collectFieldSymbols,[Default]), UsedName(ne,[Default]), UsedName(tableTag,[Default]), UsedName(O,[Default]), UsedName(foreignKey$default$5,[Default]), UsedName(equals,[Default]), UsedName(synchronized,[Default]), UsedName(encodeRef,[Default]), UsedName(color,[Default]), UsedName(foreignKeys,[Default]), UsedName(asInstanceOf,[Default]), UsedName(foreignKey,[Default]), UsedName(getClass,[Default]), UsedName(schemaName,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(models.Tables.Users)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.Tables...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: models.Tables[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.Tables)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.Tables,ModifiedNames(changes = UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(eq,[Default]), UsedName(Tables,[Default]), UsedName(GetResultUsersRow,[Implicit]), UsedName(notify,[Default]), UsedName(wait,[Default]), UsedName(toString,[Default]), UsedName(Users,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]), UsedName(==,[Default]), UsedName(schema,[Default]), UsedName(finalize,[Default]), UsedName(MessagesRow,[Default]), UsedName(Messages,[Default]), UsedName(profile,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(ddl,[Default]), UsedName(ne,[Default]), UsedName(UsersRow,[Default]), UsedName(equals,[Default]), UsedName(synchronized,[Default]), UsedName(asInstanceOf,[Default]), UsedName(GetResultMessagesRow,[Implicit]), UsedName(getClass,[Default]))) invalidates 1 classes due to The models.Tables has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(GetResultUsersRow,[Implicit]), UsedName(GetResultMessagesRow,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(models.Tables)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.Tables.UsersRow...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: models.Tables.UsersRow[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.Tables.UsersRow)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.Tables.UsersRow,ModifiedNames(changes = UsedName(productElementNames,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(password,[Default]), UsedName(copy$default$3,[Default]), UsedName(eq,[Default]), UsedName(productElementName,[Default]), UsedName(id,[Default]), UsedName(canEqual,[Default]), UsedName(notify,[Default]), UsedName(username,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(wait,[Default]), UsedName(toString,[Default]), UsedName(productElement,[Default]), UsedName(unapply,[Default]), UsedName(apply,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]), UsedName(==,[Default]), UsedName(productArity,[Default]), UsedName(copy$default$1,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(models;Tables;UsersRow;init;,[Default]), UsedName(ne,[Default]), UsedName(copy$default$4,[Default]), UsedName(UsersRow,[Default]), UsedName(equals,[Default]), UsedName(synchronized,[Default]), UsedName(copy,[Default]), UsedName(color,[Default]), UsedName(copy$default$2,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]))) invalidates 1 classes due to The models.Tables.UsersRow has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(productElementNames,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(password,[Default]), UsedName(copy$default$3,[Default]), UsedName(eq,[Default]), UsedName(productElementName,[Default]), UsedName(id,[Default]), UsedName(canEqual,[Default]), UsedName(notify,[Default]), UsedName(username,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(wait,[Default]), UsedName(toString,[Default]), UsedName(productElement,[Default]), UsedName(unapply,[Default]), UsedName(apply,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName(##,[Default]), UsedName(==,[Default]), UsedName(productArity,[Default]), UsedName(copy$default$1,[Default]), UsedName(finalize,[Default]), UsedName(productIterator,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(models;Tables;UsersRow;init;,[Default]), UsedName(ne,[Default]), UsedName(copy$default$4,[Default]), UsedName(UsersRow,[Default]), UsedName(equals,[Default]), UsedName(synchronized,[Default]), UsedName(copy,[Default]), UsedName(color,[Default]), UsedName(copy$default$2,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productPrefix,[Default]), UsedName(getClass,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(models.Tables.UsersRow)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.Tables.Messages...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: models.Tables.Messages[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.Tables.Messages)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.Tables.Messages,ModifiedNames(changes = UsedName(create_*,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(column,[Default]), UsedName(TableElementType,[Default]), UsedName(index,[Default]), UsedName(eq,[Default]), UsedName(timestamp,[Default]), UsedName(notify,[Default]), UsedName(index$default$3,[Default]), UsedName(tableName,[Default]), UsedName(toNode,[Default]), UsedName(wait,[Default]), UsedName(indexes,[Default]), UsedName(toString,[Default]), UsedName(tableConstraints,[Default]), UsedName(foreignKey$default$6,[Default]), UsedName(tableNode,[Default]), UsedName(fromuser,[Default]), UsedName(primaryKey,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName(primaryKeys,[Default]), UsedName(touser,[Default]), UsedName(tableProvider,[Default]), UsedName(*,[Default]), UsedName(##,[Default]), UsedName(==,[Default]), UsedName(models;Tables;Messages;init;,[Default]), UsedName(?,[Default]), UsedName(usersFk2,[Default]), UsedName(finalize,[Default]), UsedName(body,[Default]), UsedName(tableIdentitySymbol,[Default]), UsedName(Messages,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(collectFieldSymbols,[Default]), UsedName(ne,[Default]), UsedName(tableTag,[Default]), UsedName(O,[Default]), UsedName(foreignKey$default$5,[Default]), UsedName(equals,[Default]), UsedName(synchronized,[Default]), UsedName(encodeRef,[Default]), UsedName(messageId,[Default]), UsedName(foreignKeys,[Default]), UsedName(asInstanceOf,[Default]), UsedName(usersFk1,[Default]), UsedName(foreignKey,[Default]), UsedName(getClass,[Default]), UsedName(schemaName,[Default]))) invalidates 1 classes due to The models.Tables.Messages has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(create_*,[Default]), UsedName(notifyAll,[Default]), UsedName($init$,[Default]), UsedName(column,[Default]), UsedName(TableElementType,[Default]), UsedName(index,[Default]), UsedName(eq,[Default]), UsedName(timestamp,[Default]), UsedName(notify,[Default]), UsedName(index$default$3,[Default]), UsedName(tableName,[Default]), UsedName(toNode,[Default]), UsedName(wait,[Default]), UsedName(indexes,[Default]), UsedName(toString,[Default]), UsedName(tableConstraints,[Default]), UsedName(foreignKey$default$6,[Default]), UsedName(tableNode,[Default]), UsedName(fromuser,[Default]), UsedName(primaryKey,[Default]), UsedName(hashCode,[Default]), UsedName(!=,[Default]), UsedName(primaryKeys,[Default]), UsedName(touser,[Default]), UsedName(tableProvider,[Default]), UsedName(*,[Default]), UsedName(##,[Default]), UsedName(==,[Default]), UsedName(models;Tables;Messages;init;,[Default]), UsedName(?,[Default]), UsedName(usersFk2,[Default]), UsedName(finalize,[Default]), UsedName(body,[Default]), UsedName(tableIdentitySymbol,[Default]), UsedName(Messages,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(collectFieldSymbols,[Default]), UsedName(ne,[Default]), UsedName(tableTag,[Default]), UsedName(O,[Default]), UsedName(foreignKey$default$5,[Default]), UsedName(equals,[Default]), UsedName(synchronized,[Default]), UsedName(encodeRef,[Default]), UsedName(messageId,[Default]), UsedName(foreignKeys,[Default]), UsedName(asInstanceOf,[Default]), UsedName(usersFk1,[Default]), UsedName(foreignKey,[Default]), UsedName(getClass,[Default]), UsedName(schemaName,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(models.Tables.Messages)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.DatabaseModel...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: models.DatabaseModel[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.DatabaseModel)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of controllers.Messageboarddb. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.DatabaseModel,ModifiedNames(changes = UsedName(getIdFromUser,[Default]), UsedName(finalize,[Default]), UsedName(getUserFromId,[Default]), UsedName(publics,[Default]))) invalidates 1 classes due to The models.DatabaseModel has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(getIdFromUser,[Default]), UsedName(finalize,[Default]), UsedName(getUserFromId,[Default]), UsedName(publics,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(models.DatabaseModel)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mFinal step, transitive dependencies:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 0.31619071 s[0m
[0m[[0m[0mdebug[0m] [0m[0mdone compiling[0m
